services:
  ui:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: whatsapp-invoice-assistant-ui
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "5001:5001"
    depends_on:
      db:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@whatsapp-invoice-assistant-db:5432/whatsapp_invoice_assistant
      - MONGODB_URI=mongodb://whatsapp-invoice-assistant-mongodb:27017/whatsapp_invoice_assistant
      - USE_MONGODB=true
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_REGION=${S3_REGION:-us-east-1}
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - IN_DOCKER=true
    networks:
      - invoice-assistant-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    command: ui/app.py --host 0.0.0.0 --port 5001

  mongodb:
    image: mongo:6.0
    container_name: whatsapp-invoice-assistant-mongodb
    restart: unless-stopped
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27018:27017"
    networks:
      - invoice-assistant-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    environment:
      - MONGO_INITDB_DATABASE=whatsapp_invoice_assistant

  db:
    image: postgres:16-alpine
    container_name: whatsapp-invoice-assistant-db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=whatsapp_invoice_assistant
    networks:
      - invoice-assistant-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: postgres

  db-init:
    image: postgres:14
    container_name: whatsapp-invoice-assistant-db-init
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGHOST=whatsapp-invoice-assistant-db
      - PGDATABASE=whatsapp_invoice_assistant
    networks:
      - invoice-assistant-network
    command: >
      bash -c "
        echo 'Waiting for database to be ready...' &&
        pg_isready -h whatsapp-invoice-assistant-db -U postgres &&
        echo 'Creating pgvector extension...' &&
        psql -h whatsapp-invoice-assistant-db -U postgres -d whatsapp_invoice_assistant -c 'CREATE EXTENSION IF NOT EXISTS vector;' &&
        echo 'Database initialization completed successfully!'
      "
    restart: on-failure

volumes:
  postgres_data:
    name: whatsapp-invoice-assistant-pgdata
  mongodb_data:
    name: whatsapp-invoice-assistant-mongodb-data

networks:
  invoice-assistant-network:
    name: invoice-assistant-network
    driver: bridge 